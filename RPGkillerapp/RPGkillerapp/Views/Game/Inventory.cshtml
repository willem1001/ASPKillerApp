@using ClassLibrary
@using RPGkillerapp.Controllers

@{
    ViewBag.Title = "Inventory";
    Layout = "~/Views/Shared/_LayoutWithTop.cshtml";
}

<h2>Inventory</h2>

@using (Html.BeginForm("ReturnToGamescreen", "Game", FormMethod.Post))
{
    <input value="Return" , type="submit" />
}

@Html.Label("Name: " + GameController.CurrentPlayer.Name)
@Html.Label("Health: " + GameController.CurrentPlayer.Health + "/" + GameController.CurrentPlayer.MaxHealth)
@Html.Label("Mana: " + GameController.CurrentPlayer.Mana + "/" + GameController.CurrentPlayer.MaxMana)
@Html.Label("Defence: " + GameController.CurrentPlayer.Defence)
@Html.Label("Attack: " + GameController.CurrentPlayer.Attack)
@Html.Label("Level: " + GameController.CurrentPlayer.Level)

<table style="width:50%">
    <tr>
        <th>Name</th>
        <th>Type</th>
        <th>Level</th>
        <th>Value</th>
        <th>Amount</th>
        <th>Equiped</th>
    </tr>

    @foreach (Item item in ((GameController)ViewContext.Controller).InventoryItems())
    {
        <tr>
            <td>@Html.ActionLink(@item.Name, "EquipItem", "Game", new { ItemId = item.Id.ToString(), ItemType = item.Type }, null)</td>
            <td>@item.Type</td>
            <td>@item.Level</td>
            <td>@item.GoldValue</td>
            <td>@item.ItemAmount</td>
            @if (((GameController)ViewContext.Controller).PlayerEquipment().Contains(item.Id))
            {
                <td>X</td>
            }
        </tr>
    }


</table> 